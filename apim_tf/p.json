<policies>
    <inbound>
        <validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Authentication required"
                      open-id-config="https://login.microsoftonline.com/api.moral.com/v2.0/.well-known/openid-configuration">
            <audiences>
                <audience>all-audiences</audience>
            </audiences>
        </validate-jwt>
        </inbound>
    <backend>
        <forward-request />
    </backend>
    <outbound>
        </outbound>
    <on-error>
        <choose>
            <when condition="@(context.LastError?.Source == "validate-jwt")">
                <return-response>
                    <set-status code="401" reason="Unauthorized" />
                    <set-header name="WWW-Authenticate" exists-action="override">
                        <value>Bearer error="invalid_token", error_description="Authentication required"</value>
                    </set-header>
                    <set-body>{"statusCode": 401, "message": "Authentication required - Invalid Token"}</set-body>
                </return-response>
            </when>
            <otherwise>
                <return-response>
                    <set-status code="@(context.Response.StatusCode)" reason="@(context.Response.StatusReason)" />
                    <set-body>@(context.Response.Body.As<string>(preserveContent: true) ?? JObject.FromObject(new { statusCode = context.Response.StatusCode, message = context.Response.StatusReason }).ToString())</set-body>
                </return-response>
            </otherwise>
        </choose>
    </on-error>
</policies>
